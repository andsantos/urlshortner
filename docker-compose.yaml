version: '3.3'

networks:
  cache:
#    internal: true
  database:
#    internal: true
  api:
#    internal: true
  proxy:
  monitoramento:

volumes:
  app-logs:
  prometheus-data:
  grafana-data:
  mysql-data:

services:
  urlshortner-redis:
    image: redis
    container_name: urlshortner-redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - cache

  urlshortner-mysql:
    image: mysql:8.1
    container_name: urlshortner-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: 'urlshortner'
      MYSQL_USER: 'urlshortner'
      MYSQL_PASSWORD: 'QwErTy'
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
      MYSQL_ROOT_HOST: '%'
    volumes:
      - ./docker/mysql:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql
    expose:
      - 3306
    networks:
      - database
    depends_on:
      - urlshortner-redis

  urlshortner-api: &api
    build:
      context: .
      dockerfile: Dockerfile
    image: app-urlshortner-api
    container_name: urlshortner-api
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    restart: unless-stopped
    ports:
      - 8080:8080
    volumes:
      - app-logs:/var/log/app
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - api
      - cache
      - database
    depends_on:
      - urlshortner-mysql
    healthcheck:
      test: "curl -sS http://localhost:8080/actuator/health"
      interval: 1s
      timeout: 30s
      retries: 60
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.3GB'

  urlshortner-api2:
    <<: *api
    container_name: urlshortner-api2
    ports:
      - 8081:8080

  urlshortner-prometheus:
    image: prom/prometheus:latest
    container_name: urlshortner-prometheus
    restart: unless-stopped
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./docker/alert.rules:/etc/prometheus/alert.rules
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - monitoramento
      - api
    depends_on:
      - urlshortner-api

  urlshortner-grafana:
    image: grafana/grafana
    container_name: urlshortner-grafana
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - monitoramento
    depends_on:
      - urlshortner-prometheus

  urlshortner-loki:
    image: grafana/loki
    container_name: urlshortner-loki
    command:
        - -config.file=/etc/loki/local-config.yaml
        - -print-config-stderr=true
    ports:
        - 3100:3100
    networks:
      - monitoramento
      - api
    depends_on:
      - urlshortner-prometheus

  urlshortner-proxy:
    image: nginx
    container_name: urlshortner-proxy
    restart: unless-stopped
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/proxy.conf:/etc/nginx/conf.d/proxy.conf
    ports:
      - 80:80
    networks:
      - proxy
      - api
    depends_on:
      - urlshortner-api

  urlshortner-alertmanager: 
    image: prom/alertmanager
    container_name: urlshortner-alertmanager
    volumes: 
      - ./docker/alertmanager:/etc/alertmanager/:ro
    ports: 
      - 9093:9093
    command: 
      - --config.file=/etc/alertmanager/alertmanager.yml
    networks:
      - monitoramento
    depends_on:
      - urlshortner-prometheus